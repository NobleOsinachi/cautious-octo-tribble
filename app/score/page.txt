import { useNavigation } from 'next/navigation';
import React from 'react';
import ProgressBar from 'react-customizable-progressbar';

const Noble = () => {
	const navigation = useNavigation();
	const name = navigation.query.name; // Extract the name parameter from the URL

	const progress = 90; // Set the progress value dynamically

	return (
		<div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
			<span style={{ marginTop: '0px', fontSize: '40px' }}>You scored: {progress / 10} / 10</span>

			<ProgressBar progress={progress} radius={100} />

			<span style={{ marginTop: '0px', fontSize: '40px' }}>{progress}%</span>

			<button className="bg-blue-200 p-3" onClick={() => { navigation.navigate('/'); }}>
				Try again? {name}
			</button>
		</div>
	);
};

export default Noble;



"use client";

import React, { Component } from 'react';


class CircularProgressBar extends React.Component {
    constructor(props) {
        super(props);
        this.state = {};
    }

    render() {
        // Size of the enclosing square
        const sqSize = this.props.sqSize;
        // SVG centers the stroke width on the radius, subtract out so circle fits in square
        const radius = (this.props.sqSize - this.props.strokeWidth) / 2;
        // Enclose cicle in a circumscribing square
        const viewBox = `0 0 ${sqSize} ${sqSize}`;
        // Arc length at 100% coverage is the circle circumference
        const dashArray = radius * Math.PI * 2;
        // Scale 100% coverage overlay with the actual percent
        const dashOffset = dashArray - dashArray * this.props.percentage / 100;

        return (
            <svg
                width={this.props.sqSize}
                height={this.props.sqSize}
                viewBox={viewBox}>
                <circle
                    className="circle-background"
                    cx={this.props.sqSize / 2}
                    cy={this.props.sqSize / 2}
                    r={radius}
                    strokeWidth={`${this.props.strokeWidth}px`} />
                <circle
                    className="circle-progress"
                    cx={this.props.sqSize / 2}
                    cy={this.props.sqSize / 2}
                    r={radius}
                    strokeWidth={`${this.props.strokeWidth}px`}
                    // Start progress marker at 12 O'Clock
                    transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}
                    style={{
                        strokeDasharray: dashArray,
                        strokeDashoffset: dashOffset
                    }} />
                <text
                    className="circle-text"
                    x="50%"
                    y="50%"
                    dy=".3em"
                    textAnchor="middle">
                    {`${this.props.percentage}%`}
                </text>
            </svg>
        );
    }
}

CircularProgressBar.defaultProps = {
    sqSize: 200,
    percentage: 25,
    strokeWidth: 10
};

class App extends React.Component {
    constructor(props) {
        super(props);

        this.state = {
            percentage: 25
        };

        this.handleChangeEvent = this.handleChangeEvent.bind(this);
    }

    handleChangeEvent(event) {
        this.setState({
            percentage: event.target.value
        });
    }

    render() {
        return (
            <div>
                <CircularProgressBar
                    strokeWidth="10"
                    sqSize="200"
                    percentage={this.state.percentage} />
                <div>
                    <input
                        id="progressInput"
                        type="range"
                        min="0"
                        max="100"
                        step="1"
                        value={this.state.percentage}
                        onChange={this.handleChangeEvent} />
                </div>
            </div>
        );
    }
}


"use client";
import { useRouter, useSearchParams } from "next/navigation"; // Import from next/navigation instead of next/router
import React from "react";
import ProgressBar from "react-customizable-progressbar";

const Score = () => {
  const router = useRouter();
  // Use nullish coalescing operator to handle null or undefined cases
  const id = parseInt(useSearchParams()?.get("id") ?? "0", 10);

  const progress = id || 0;

  return (
    <div
      style={{ display: "flex", flexDirection: "column", alignItems: "center" }}
    >
      <span style={{ marginTop: "0px", fontSize: "40px" }}>
        You scored: {progress / 10} / 10
      </span>

      <ProgressBar progress={progress} radius={100} />
      <span style={{ marginTop: "0px", fontSize: "40px" }}>{progress}%</span>

      <button
        className="bg-blue-200 p-3"
        onClick={() => {
          router.push("/");
        }}
      >
        Try again?
      </button>
    </div>
  );
};

export default Score;
